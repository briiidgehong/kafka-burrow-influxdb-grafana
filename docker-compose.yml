version: '2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  console:
    image: docker.redpanda.com/vectorized/console:v2.1.1
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:9092"]
          schemaRegistry:
            enabled: false
            urls: []
    ports:
      - 8080:8080
    restart: always

  burrow:
    image: solsson/burrow:latest
    volumes:
      - ./config/burrow.toml:/etc/burrow/burrow.toml:ro
      - burrow_data:/var/tmp/burrow
    ports:
      - 8000:8000
    depends_on:
      - zookeeper
      - kafka
    restart: always

  burrow-dashboard:
    image: joway/burrow-dashboard:latest
    depends_on:
      - burrow
    environment:
      BURROW_BACKEND: 'http://burrow:8000'
    ports:
      - "80:80"
    restart: always
  # telegraf:
  #   image: telegraf:1.18-alpine
  #   volumes:
  #     - ./config/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  #   depends_on:
  #     - influxdb
  #   links:
  #     - influxdb
  #   ports:
  #     - '8125:8125'
  #   restart: always

  # influxdb:
  #   image: influxdb:1.8-alpine
  #   environment:
  #     - INFLUXDB_DB=influx
  #     - INFLUXDB_ADMIN_USER=admin1234
  #     - INFLUXDB_ADMIN_PASSWORD=admin1234
  #   ports:
  #     - "8086:8086"
  #   volumes:
  #     - influxdb_data:/var/lib/influxdb2
  #     - influxdb_config:/etc/influxdb2
  #   restart: always

  # grafana:
  #   image: grafana/grafana:8.0.2
  #   depends_on:
  #     - influxdb
  #   links:
  #     - influxdb
  #   environment:
  #     GF_SECURITY_ADMIN_USER: admin1234
  #     GF_SECURITY_ADMIN_PASSWORD: admin1234
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - grafana_data:/var/lib/grafana

volumes:
  burrow_data: {}
  grafana_data: {}
  influxdb_data: {}
  influxdb_config: {}
